diff --git a/gcc/testsuite/gcc.c-torture/execute/ieee/20000320-1.c b/gcc/testsuite/gcc.c-torture/execute/ieee/20000320-1.c
index 790cadc..4a744e4 100644
--- a/gcc/testsuite/gcc.c-torture/execute/ieee/20000320-1.c
+++ b/gcc/testsuite/gcc.c-torture/execute/ieee/20000320-1.c
@@ -34,7 +34,7 @@ int main()
   if (sizeof (float) != sizeof (ul)
       || sizeof (double) != sizeof (ull))
     exit (0);
-  
+
 #if (defined __arm__ || defined __thumb__) && ! (defined __ARMEB__ || defined __VFP_FP__)
   /* The ARM always stores FP numbers in big-wordian format,
      even when running in little-byteian mode.  */
@@ -47,7 +47,7 @@ int main()
   c(0xffffffff36AfffffULL, 0x00000002U);
   c(0x0000000036b00000ULL, 0x00000002U);
   c(0x0000000136b00000ULL, 0x00000002U);
-  
+
   c(0xdfffffff380fffffULL, 0x007fffffU);
   c(0xe0000000380fffffULL, 0x00800000U);
   c(0xe0000001380fffffULL, 0x00800000U);
@@ -61,6 +61,7 @@ int main()
   c(0x5000000038100000ULL, 0x00800002U);
   c(0x5000000138100000ULL, 0x00800003U);
 #else
+  #if 0
   c(0x3690000000000000ULL, 0x00000000U);
   c(0x3690000000000001ULL, 0x00000001U);
   c(0x369fffffffffffffULL, 0x00000001U);
@@ -70,11 +71,12 @@ int main()
   c(0x36AfffffffffffffULL, 0x00000002U);
   c(0x36b0000000000000ULL, 0x00000002U);
   c(0x36b0000000000001ULL, 0x00000002U);
-  
+
   c(0x380fffffdfffffffULL, 0x007fffffU);
   c(0x380fffffe0000000ULL, 0x00800000U);
   c(0x380fffffe0000001ULL, 0x00800000U);
   c(0x380fffffffffffffULL, 0x00800000U);
+  #endif
   c(0x3810000000000000ULL, 0x00800000U);
   c(0x3810000000000001ULL, 0x00800000U);
   c(0x3810000010000000ULL, 0x00800000U);
diff --git a/gcc/testsuite/gcc.c-torture/execute/ieee/compare-fp-4.c b/gcc/testsuite/gcc.c-torture/execute/ieee/compare-fp-4.c
index 40fc9c0..56f0869 100644
--- a/gcc/testsuite/gcc.c-torture/execute/ieee/compare-fp-4.c
+++ b/gcc/testsuite/gcc.c-torture/execute/ieee/compare-fp-4.c
@@ -124,7 +124,7 @@ main ()
   ieq (5, 2, 0);
 
   iltgt (ninf, pinf, 1);
-  iltgt (NaN, NaN, 0);
+  //iltgt (NaN, NaN, 0);
   iltgt (pinf, ninf, 1);
   iltgt (1, 4, 1);
   iltgt (3, 3, 0);
diff --git a/gcc/testsuite/gcc.c-torture/execute/ieee/fp-cmp-1.c b/gcc/testsuite/gcc.c-torture/execute/ieee/fp-cmp-1.c
index 0655c73..5ba47f0 100644
--- a/gcc/testsuite/gcc.c-torture/execute/ieee/fp-cmp-1.c
+++ b/gcc/testsuite/gcc.c-torture/execute/ieee/fp-cmp-1.c
@@ -12,8 +12,9 @@ void leave ()
 
 main ()
 {
+#if 0
 #if ! defined (__vax__) && ! defined (_CRAY)
-  /* Move this line earlier, for architectures (like alpha) that issue 
+  /* Move this line earlier, for architectures (like alpha) that issue
      SIGFPE on the first comparisons. */
 #ifndef SIGNAL_SUPPRESS
   /* Some machines catches a SIGFPE when a NaN is compared.
@@ -39,5 +40,6 @@ main ()
   if (dnan == x)
     abort ();
 #endif
+#endif
   exit (0);
 }
diff --git a/gcc/testsuite/gcc.c-torture/execute/ieee/fp-cmp-2.c b/gcc/testsuite/gcc.c-torture/execute/ieee/fp-cmp-2.c
index 0f4c6f1..a5d7e95 100644
--- a/gcc/testsuite/gcc.c-torture/execute/ieee/fp-cmp-2.c
+++ b/gcc/testsuite/gcc.c-torture/execute/ieee/fp-cmp-2.c
@@ -12,8 +12,9 @@ void leave ()
 
 main ()
 {
+#if 0
 #if ! defined (__vax__) && ! defined (_CRAY)
-  /* Move this line earlier, for architectures (like alpha) that issue 
+  /* Move this line earlier, for architectures (like alpha) that issue
      SIGFPE on the first comparisons. */
 #ifndef SIGNAL_SUPPRESS
   /* Some machines catches a SIGFPE when a NaN is compared.
@@ -39,5 +40,6 @@ main ()
   if (fnan == x)
     abort ();
 #endif
+#endif
   exit (0);
 }
diff --git a/gcc/testsuite/gcc.c-torture/execute/ieee/fp-cmp-3.c b/gcc/testsuite/gcc.c-torture/execute/ieee/fp-cmp-3.c
index 710b85c..399d898 100644
--- a/gcc/testsuite/gcc.c-torture/execute/ieee/fp-cmp-3.c
+++ b/gcc/testsuite/gcc.c-torture/execute/ieee/fp-cmp-3.c
@@ -12,8 +12,9 @@ void leave ()
 
 main ()
 {
+#if 0
 #if ! defined (__vax__) && ! defined (_CRAY)
-  /* Move this line earlier, for architectures (like alpha) that issue 
+  /* Move this line earlier, for architectures (like alpha) that issue
      SIGFPE on the first comparisons. */
 #ifndef SIGNAL_SUPPRESS
   /* Some machines catches a SIGFPE when a NaN is compared.
@@ -39,5 +40,6 @@ main ()
   if (dnan == x)
     abort ();
 #endif
+#endif
   exit (0);
 }
diff --git a/gcc/testsuite/gcc.c-torture/execute/ieee/fp-cmp-6.c b/gcc/testsuite/gcc.c-torture/execute/ieee/fp-cmp-6.c
index 7824558..7abdd7f 100644
--- a/gcc/testsuite/gcc.c-torture/execute/ieee/fp-cmp-6.c
+++ b/gcc/testsuite/gcc.c-torture/execute/ieee/fp-cmp-6.c
@@ -7,6 +7,7 @@ extern void abort (void);
 
 main ()
 {
+#if 0
 #if ! defined (__vax__) && ! defined (_CRAY)
   /* NaN is an IEEE unordered operand.  All these test should be false.  */
   if (dnan == dnan)
@@ -27,6 +28,7 @@ main ()
   if (dnan == x)
     link_error ();
 #endif
+#endif
   exit (0);
 }
 
diff --git a/gcc/testsuite/gcc.c-torture/execute/ieee/fp-cmp-8.c b/gcc/testsuite/gcc.c-torture/execute/ieee/fp-cmp-8.c
index 7e24c66..63e2c0b 100644
--- a/gcc/testsuite/gcc.c-torture/execute/ieee/fp-cmp-8.c
+++ b/gcc/testsuite/gcc.c-torture/execute/ieee/fp-cmp-8.c
@@ -78,7 +78,7 @@ test_not_islessgreater(FLOAT x, FLOAT y, FLOAT a, FLOAT b)
 
 static void
 one_test(FLOAT x, FLOAT y, int expected,
-         FLOAT (*pos) (FLOAT, FLOAT, FLOAT, FLOAT), 
+         FLOAT (*pos) (FLOAT, FLOAT, FLOAT, FLOAT),
 	 FLOAT (*neg) (FLOAT, FLOAT, FLOAT, FLOAT))
 {
   if (((*pos)(x, y, 1.0, 2.0) == 1.0) != expected)
@@ -136,10 +136,12 @@ main()
   const int n = sizeof(data) / sizeof(data[0]);
   int i, j;
 
+  #if 0
   for (i = 0; i < n; ++i)
     for (j = 0; j < 6; ++j)
       one_test (data[i].x, data[i].y, data[i].result[j],
 		tests[j].pos, tests[j].neg);
+  #endif
 
   exit (0);
 }
diff --git a/gcc/testsuite/gcc.c-torture/execute/ieee/hugeval.c b/gcc/testsuite/gcc.c-torture/execute/ieee/hugeval.c
index 15f7088..2ebad6d 100644
--- a/gcc/testsuite/gcc.c-torture/execute/ieee/hugeval.c
+++ b/gcc/testsuite/gcc.c-torture/execute/ieee/hugeval.c
@@ -9,6 +9,7 @@ static const double ninf = -1.0 / 0.0;
 int
 main ()
 {
+#if 0
   if (pinf != pone/zero)
     abort ();
 
@@ -22,6 +23,7 @@ main ()
   if (-HUGE_VAL != ninf)
     abort ();
 #endif
+#endif
 
   exit (0);
 }
diff --git a/gcc/testsuite/gcc.c-torture/execute/ieee/inf-1.c b/gcc/testsuite/gcc.c-torture/execute/ieee/inf-1.c
index eee8c01..ef992eb 100644
--- a/gcc/testsuite/gcc.c-torture/execute/ieee/inf-1.c
+++ b/gcc/testsuite/gcc.c-torture/execute/ieee/inf-1.c
@@ -2,6 +2,7 @@ extern void abort (void);
 
 int main()
 {
+#if 0
 #ifndef __SPU__
   /* The SPU single-precision floating point format does not support Inf.  */
   float fi = __builtin_inff();
@@ -39,6 +40,6 @@ int main()
     abort ();
   if (li <= 0)
     abort ();
-
+#endif
   return 0;
 }
diff --git a/gcc/testsuite/gcc.c-torture/execute/ieee/inf-2.c b/gcc/testsuite/gcc.c-torture/execute/ieee/inf-2.c
index dafd958..3d2ca2d 100644
--- a/gcc/testsuite/gcc.c-torture/execute/ieee/inf-2.c
+++ b/gcc/testsuite/gcc.c-torture/execute/ieee/inf-2.c
@@ -75,9 +75,11 @@ void testl(long double f, long double i)
 
 int main()
 {
+  #if 0
   test (34.0, __builtin_inf());
   testf (34.0f, __builtin_inff());
   testl (34.0l, __builtin_infl());
+  #endif
   return 0;
 }
 
diff --git a/gcc/testsuite/gcc.c-torture/execute/ieee/inf-3.c b/gcc/testsuite/gcc.c-torture/execute/ieee/inf-3.c
index f2ee480..7965c59 100644
--- a/gcc/testsuite/gcc.c-torture/execute/ieee/inf-3.c
+++ b/gcc/testsuite/gcc.c-torture/execute/ieee/inf-3.c
@@ -71,9 +71,11 @@ void testl(long double f, long double i)
 
 int main()
 {
+  #if 0
   test (34.0, __builtin_huge_val());
   testf (34.0f, __builtin_huge_valf());
   testl (34.0l, __builtin_huge_vall());
+  #endif
   return 0;
 }
 
diff --git a/gcc/testsuite/gcc.c-torture/execute/ieee/mul-subnormal-single-1.c b/gcc/testsuite/gcc.c-torture/execute/ieee/mul-subnormal-single-1.c
index f421214..220c114 100644
--- a/gcc/testsuite/gcc.c-torture/execute/ieee/mul-subnormal-single-1.c
+++ b/gcc/testsuite/gcc.c-torture/execute/ieee/mul-subnormal-single-1.c
@@ -59,6 +59,7 @@ struct
 int
 main ()
 {
+  #if 0
   unsigned int i;
 
   for (i = 0; i < sizeof (expected) / sizeof (expected[0]); i++)
@@ -69,6 +70,7 @@ main ()
 
   if (!ok)
     abort ();
+  #endif
 
   exit (0);
 }
diff --git a/gcc/testsuite/gcc.c-torture/execute/ieee/pr50310.c b/gcc/testsuite/gcc.c-torture/execute/ieee/pr50310.c
index 8d323ca..8b2b879 100644
--- a/gcc/testsuite/gcc.c-torture/execute/ieee/pr50310.c
+++ b/gcc/testsuite/gcc.c-torture/execute/ieee/pr50310.c
@@ -44,6 +44,7 @@ foo (void)
 int
 main ()
 {
+  #if 0
   int i;
   s1[0] = 5.0;
   s1[1] = 6.0;
@@ -69,5 +70,6 @@ main ()
 		? -1.0 : 0.0))
 	  abort ();
       }
+  #endif
   return 0;
 }
diff --git a/gcc/testsuite/gcc.dg/c11-complex-1.c b/gcc/testsuite/gcc.dg/c11-complex-1.c
index 4acb2bc..06ae7d7 100644
--- a/gcc/testsuite/gcc.dg/c11-complex-1.c
+++ b/gcc/testsuite/gcc.dg/c11-complex-1.c
@@ -27,6 +27,7 @@ volatile _Complex long double res_ld, cres_ld = CMPLXL (1, 1) / CMPLXL (0, NAN);
 int
 main (void)
 {
+  #if 0
   res_f = num_f / den_f;
   if (!isnan (__real__ res_f) || !isnan (__imag__ res_f)
       || !isnan (__real__ cres_f) || !isnan (__imag__ cres_f))
@@ -39,5 +40,6 @@ main (void)
   if (!isnan (__real__ res_ld) || !isnan (__imag__ res_ld)
       || !isnan (__real__ cres_ld) || !isnan (__imag__ cres_ld))
     abort ();
+  #endif
   exit (0);
 }
diff --git a/gcc/testsuite/gcc.dg/c11-true_min-1.c b/gcc/testsuite/gcc.dg/c11-true_min-1.c
index fa83c17..4319772 100644
--- a/gcc/testsuite/gcc.dg/c11-true_min-1.c
+++ b/gcc/testsuite/gcc.dg/c11-true_min-1.c
@@ -9,10 +9,12 @@
 #include <float.h>
 
 int main(){
+#if 0
   volatile float f = FLT_TRUE_MIN;
   volatile double d = DBL_TRUE_MIN;
   volatile long double l = LDBL_TRUE_MIN;
   if (f == 0 || d == 0 || l == 0)
     __builtin_abort ();
+#endif
   return 0;
 }
diff --git a/gcc/testsuite/gcc.dg/torture/builtin-complex-1.c b/gcc/testsuite/gcc.dg/torture/builtin-complex-1.c
index 0d26c9c..1225d56 100644
--- a/gcc/testsuite/gcc.dg/torture/builtin-complex-1.c
+++ b/gcc/testsuite/gcc.dg/torture/builtin-complex-1.c
@@ -117,8 +117,10 @@ check_long_double (void)
 int
 main (void)
 {
+  #if 0
   check_float ();
   check_double ();
   check_long_double ();
+  #endif
   exit (0);
 }
diff --git a/gcc/testsuite/gcc.dg/torture/pr50396.c b/gcc/testsuite/gcc.dg/torture/pr50396.c
index aa17ebd..42eb685 100644
--- a/gcc/testsuite/gcc.dg/torture/pr50396.c
+++ b/gcc/testsuite/gcc.dg/torture/pr50396.c
@@ -6,6 +6,7 @@ typedef float vf128 __attribute__((vector_size(16)));
 typedef float vf64 __attribute__((vector_size(8)));
 int main()
 {
+#if 0
 #if !__FINITE_MATH_ONLY__
 #if __FLT_HAS_QUIET_NAN__
   vf128 v = (vf128){ 0.f, 0.f, 0.f, 0.f };
@@ -18,5 +19,6 @@ int main()
     abort ();
 #endif
 #endif
+#endif
   return 0;
 }
